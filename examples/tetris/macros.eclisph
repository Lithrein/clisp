(macro when (condition &body body)
  `(if ,condition
    (progn
      ,@body)))

(macro unless (condition &body body)
  `(if (! ,condition)
     (progn
       ,@body)))

(macro awhen (condition &body body)
  `(progn
     (def it (int) ,condition)
     (when it ,@body)))

(macro unwind-protect (form &body cleanup-forms)
  (let ((cleanup (gensym "cleanup"))
        (result  (gensym "result")))
    `(progn
       (def ,result (int))
       (macrolet ((return (expr) 
                      `(progn
                        (= ,',result ,expr)
                        (goto ,',cleanup))))
        ,form)
        (label ,cleanup)
        ,@cleanup-forms
       (return ,result))))

(macro with-open-file (args &body body)
  (let ((var (car args))
        (filename (car (cdr args)))
        (mode (car (cdr (cdr args)))))
   `(progn
     (def ,var (ptr FILE) NULL)
     (unwind-protect
      (progn
         (= ,var (fopen ,filename ,mode))
         ,@body)
       (if ,var
         (fclose ,var))))))

(macro with-sdl2 (args &body body)
  `(progn
    (unwind-protect
     (progn
      (when (SDL_Init ,@args)
       (fprintf stderr "Erreur SDL_Init: %s" (SDL_GetError))
       (return EXIT_FAILURE))
      ,@body)
     (SDL_Quit))))
